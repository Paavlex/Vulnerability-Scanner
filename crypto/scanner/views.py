from django.shortcuts import render
from rest_framework.decorators import api_view
from rest_framework.response import Response
from rest_framework.renderers import TemplateHTMLRenderer
from rest_framework.views import APIView
from .models import Database, Vulnerability
from .serializers import DatabaseSerializer, VulnerabilitySerializer
from django.http import HttpResponse , JsonResponse

import json
import datetime
from .nmapScan import nmap_scan


# Create your views here.
def scan(request):
    '''default page'''
    return render(request, 'index.html')

def database(request):
    '''getting data from database'''
    vulnerabilities = Vulnerability.objects.all()
    serializer = VulnerabilitySerializer(vulnerabilities, many=True)
    
    devices = Database.objects.all()
    dev_serializer = DatabaseSerializer(devices, many=True)
    
    vuln_dict = {"vulns": serializer.data, "devices": dev_serializer.data}
    
    
    return render(request, 'content.html', vuln_dict)

def data_processing(request):
    '''where all the data is proccessed'''
    if request.method =='POST':
        time_stamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        scan_id = request.POST['name']
        ip_address = request.POST['ip_address']
        device_id = "2"
        device_type = "-"
        firmware = "-"
        ports = ""
        
        vulns = {}
        name_vuln = '-'
        type = '-'
        cvss = '-'
        link = '-'
        
        
        
        name = scan_id
        
        returned_dictionary = nmap_scan(ip_address)
        print(returned_dictionary)
        
        array_of_ports = returned_dictionary[ip_address]["ports"]
        
        for port in array_of_ports:
            ports = ports + port["portid"] + ";"
            scripts = port["scripts"]
            counter = 0
            for tmp in port["scripts"]:
                print("vulns",tmp)
                print("counter: ",counter)
                if counter == 1:
                    vulns=tmp
                    for vuln in vulns["data"].keys():
                        name_vuln = vuln
                        type = vulns["data"].get(vuln)["description"]["children"][0][0]
                        cvss = vulns["data"].get(vuln)["scores"]["children"][0]["CVSSv2"]
                        link = vulns["data"].get(vuln)["refs"]["children"][0][0]
                        
                        print(name," ",type," ",cvss," ",link)
                        tmp_dict = {"device_id":str(device_id), "name":str(name_vuln), "type":str(type), "cvss":str(cvss), "link":str(link)}
                        serializer = VulnerabilitySerializer(data=tmp_dict)
                        
                        if serializer.is_valid():
                            serializer.save()
                            
                        #v = Vulnerability(device_id="1", name_vuln=name_vuln, type=type, cvss=cvss, link=link)
                        #v.save(force_insert=True)
                        name_vuln = '-'
                        type = '-'
                        cvss = '-'
                        link = '-'
                        
                counter = counter+1
        
        # Device info
        tmp_dev_dict = {"time_stamp": time_stamp, "scan_id":str(scan_id), "ip_address":str(ip_address), "device_id":str(device_id), "device_type":str(device_type), "firmware":str(firmware), "open_ports":str(ports)}  
        dev_serializer = DatabaseSerializer(data=tmp_dev_dict) 
        
        if dev_serializer.is_valid():
            dev_serializer.save()
        print(ports)
            
        
       
    return render(request, 'Database.html' )
    #return JsonResponse(idk, safe=False)
    




    

